--接口
	引言:
	    我们可以用继承的关系来描述动物,猫,狗之间的关系,然而有些东西的关系无法用继承来描述;
	    比如: 飞机,公鸡,人,导弹,子弹,石头之间的关系该怎么描述呢?
	    分析: 
	            他们都可以依赖某种外物来飞,有一个最高速度和一个最低速度.我们把这些共同点归纳起来用
	            接口来描述,只要他们实现这个接口,到底怎么飞让他们自己去实现.
	    接口就是一种约定,我把方法的名称定义好,然后你按照这个方法的名称给我去实现所要的功能,
	    这样,别人只需要看接口文档就可以了.而不是去你的代码里面去寻找哪个方法是我要的那个方法;
    
     特点:
     	 接口就是订立一种规范,实现的具体功能由你去做.反正我要调用的时候总是调用这个方法.
          1) 接口中只能定义静态常量和抽象方法;给常量命名的时候约定以大写字母和下划线组合命名;
          2) 接口内的属性总是默认为public static final,所以说接口内的属性总是静态常量,
              不能使用private和protected修饰
		  3) 接口内的抽象方法总是默认为public,不能使用private和protected修饰
		  4) 接口支持多继承,用逗号隔开.比如:class Plane implements Flyable,Attackable
		  5) 接口的所有方法都是抽象的，而抽象方法是没有static，有static的方法是不能override的，所以这样定义接口才有意义。
		  
     好处:
         1) 有利于分工,比如项目经理只把整个项目的接口都定义好,然后让程序员自己去实现.只需要把各个接口文档
             的功能互相了解下,就可以同时开发了.
         2) 比如虚拟机JVM的规范,上层代码不变,定义JVM规范,不同的平台写不同的实现,不管将来出现什么新平台,
             只要按照JVM的规范写一套实现的话,java就可以在这种平台上跑了.
         3) 多态的好处.父类引用指向子类实现.
             