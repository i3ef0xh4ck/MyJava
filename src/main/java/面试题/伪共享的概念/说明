参考 : https://www.cnblogs.com/tong-yuan/p/FalseSharing.html

1.缓存行的大小

  缓存是由缓存行组成的，通常是 64 字节（常用处理器的缓存行是 64 字节的，比较旧的处理器缓存行是 32 字节），
  
  并且它有效地引用主内存中的一块地址。

2.什么叫共享?

   共享的意思是,我们可以随意的访问这个资源而不要互相等待,互相影响.
   
   比如多个线程可以共享同一块内存区域的不同变量,他们不需要相互等待,他们不会相互影响.
   
 3.什么叫伪共享?
 
   每个线程都有自己的一份工作内存,以两个CPU为例,每个CPU都对应着自己的cache,若有4个long类型(8个字节)的变量,分别为a
   ,b,c,d 每个cache行是64个字节,这4个变量刚好放满一个缓存行话,由于每次加载到缓存的时候都是按行加载
   所以会把这4个变量加载到同一个缓存行里头.
   假设CPU1正在读取变量a,CPU2读取变量b,他们都把a,b,c,d加载到自己所对应cache的同一个缓存行中,当CPU1修改完
   a之后会通知其它CPU1拥有变量a的缓存行失效,这样导致变量b也跟着失效了,那么b也得重新从内存中读取也就是说对
   变量a的操作影响的对变量b的操作,增加了受影响变量的操作效率,因为增加了向内存读取的次数.所以程序运行效率变低了.
   变量,因为没有起到我们共享的作用,所以称之为伪共享.
   
   注 : 伪共享对于单个线程的处理和读取是有利的,特别是处理数组的时候.而对于多个线程的并发读取是不利的
   
 4.如何解决伪共享?
 
   解决伪共享,就是要避免多个数据加载到同一个缓存行,最好是一个变量占用一个缓存行.
   
   1) 在两个需要频繁读取的变量中间加上7个无用的long变量,凑足64个字节占满缓存行
   
   2) 使用@sun.misc.Contended注解来修饰这个变量,让这个变量独占一行缓存行
   
       java8才有这个注解,需要引入JRE中rt.jar包,还要配置JVM启动参数(-XX:-RestrictContended),这个注解才能生效.
       
       在ConcurrentHashMap上就有使用到了这个注解
       
       如何在服务器上配置启动参数呢?
        
        不知道springboot和tomcat的如何配置这个启动参数
        
        tomcat的好办,有个文件专门配置 : 参考 : https://www.cnblogs.com/chenhuan821361335/p/8327773.html
        
        而springboot只能执行这个jar包的时候把自己要执行的参数补进去,到时候问问他们springboot在服务器上是怎么执行的
        
        参考 : https://zhuanlan.zhihu.com/p/31803182
 
 
   
 