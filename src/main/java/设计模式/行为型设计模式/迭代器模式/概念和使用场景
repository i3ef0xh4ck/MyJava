
1.概念 :

  参考 : https://www.cnblogs.com/zuoxiaolong/p/pattern18.html

   定义 : 
   
	 迭代器模式（Iterator），提供一种方法顺序访问一个聚合对象中的各种元素，而又不暴露该对象的内部表示。
	
	 所谓的不暴露该对象的内部表示是,我给你一个遍历器,你不需要知道我是什么集合,我里面是什么样子.你可以用就行了.
                 
2.使用场景 :    

   1) JAVA 中的 iterator是迭代器接口,JAVA的所有集合类都用到了Iterator
   
   2) Iterable表示这个集合类是可以遍历了,iterator()返回遍历器  
   
   3) 增强for循环称之为foreach语法,JAVA的foreach语法中，冒号后面的变量可以是两种，一个是数组，
   
        一个便是实现了Iterable接口的任何类，
  
 3.注
 
    各个集合类迭代器类通常都是使用内部类来实现，内部类在这里目的是为了隐藏实现细节，并且如此一来，
    
    迭代器的实现类可以自由的使用集合类的各个属性， 而不需要集合类提供自己属性访问的接口以及建立二者的关联关系
   





















                
                           

    