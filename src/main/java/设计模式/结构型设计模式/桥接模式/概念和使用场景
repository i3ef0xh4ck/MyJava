
1.概念 :

      参考 : https://www.cnblogs.com/betterboyz/p/9361784.html
  
     定义 : 桥接模式是将抽象部分与它的实现部分分离，使它们都可以独立地变化。
     
 　举例 :　
 
                     假设一个动物接口Animal,里面有一个run()的接口,通常我们把写一个实现类,实现这个接口,比方说Dog.
 
                     接口Animal称之为抽象部分,run方法,称之为实现部分.类Dog实现该接口,这种结构称之为抽象部分和实现部分耦合.
                     
                     但动物也有区分,有哺乳动物,脊椎动物,冷血动物..也就是说接口也是分多钟多样的,但他们都有同样行为,那就是run().
                     
                    也就是说接口也可以扩展的,但是实现可以是相同的,这个时候为了抽象部分和实现部分各自扩展,就要考虑用桥接模式了.             
      
                
2.使用场景 : 

     发送加急消息同样有两种方式，系统内短消息和邮件方式。但是加急消息的实现不同于普通消息，加急消息会自动在消息上添加加急，然后在再发送消息；另外加急消息会提供监控的方法，
     
     让客户端可以随时通过这个方法来了解对于加急消息的处理进度。比如，相应的人员是否接收到这个信息，相应的处理工作是否已经展开。因此加急消息需要扩展出一个新的接口，
     
     除了基本的发送消息的功能，还需要添加监控功能.
     
    消息类型有 : 加急和普通消息  ==> 同属于消息 ==> 抽象部分
 
    发送方式有 : 短消息和邮件  ==>　同属于实现部分
    
    
//本来一个实现类就可以搞定的东西,现在拆成了两份new UrgencyMessage是抽象部分,new EmailMessageImpement()是实现部分,他们的组合结构就是桥接模式
AbstractMessage message = new UrgencyMessage(new EmailMessageImpement());　
  

  























                
                           

    