  定义 :
  
    在计算机科学中，分治法是一种很重要的算法。字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，
	
	再把子问题分成更小的子问题……直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。这个技巧是很多高效算法的基础，
	
	如排序算法(快速排序，归并排序)
	
  分治法所能解决的问题一般具有以下几个特征：
  
	1) 该问题的规模缩小到一定的程度就可以容易地解决
	
	2) 该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质。
	
	3) 利用该问题分解出的子问题的解可以合并为该问题的解；
	
	4) 该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。	
	
   注 : 分治法里面要用到递归技术,为什么要用到递归技术呢,那是因为这个问题可以分为
   
        若干个相同的子问题..
   
   递归 : 就是在运行的过程中调用自己
   
   试题: 
	  
     假设有一个自然数数组,第一个数为0,第二个数为1,数组从第3项后的每一项开始为前两项之和,
	 
	 数组下标为0...n.现在给定一个下标n,求出该位置上的数?

   解析 : 
   
      不管是第几项,每一个数都是前两项之后,所以他们的问题是相同的.前两项中的每一项又可以分解成
	  
	  它们的前两项之和,直分解到第一项和第二项相加,然后再往上合并,得到最终的解.
	  
    int getElement(int n){
		
		if(n == 0) return 0;
		
		if(n == 1) return 1;
		
		if(n > 1) 
		  return getElement(n-1) + getElement(n-2);  //递归调用
	}
	 
    说明 :

      把问题getElement(n)拆分成两个子问题getElement(n-1)和getElement(n-2)的合并,子问题继续往下拆解,
	  
	  直到可以直接求解,然后往上合并.所以完全符合分治法的定义.
	  
	  还有二分查找法也是使用了分治法.